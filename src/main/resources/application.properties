spring.application.name=1_SpringBoot

# Oracle 연결
spring.datasource.driver-class-name=oracle.jdbc.driver.OracleDriver
spring.datasource.url=jdbc:oracle:thin:@localhost:1521:xe
spring.datasource.username=SPRINGBOOT
spring.datasource.password=SPRINGBOOT

# contextPath 지정
# server.servlet.context-path=/springboot

# ViewResolver 관련
# spring.thymeleaf.prefix=classpath:templates/views/
# spring.thymeleaf.suffix=.html

# error 페이지 관련
# error 페이지를 톰캣 버전으로 바꾸는 법
# server.error.whitelabel.enabled=false

# mybaits 설정
# mapper 등록
# mybatis.mapper-locations=classpath:mappers/member-mapper.xml, classpath:mappers/board-mapper.xml
# mappers안에 있는 모든 폴더에 모든 파일을 mapper로 사용
mybatis.mapper-locations=classpath:mappers/**.xml
# 낙타봉 표기법 설정
mybatis.configuration.map-underscore-to-camel-case=true
# resultType 별칭 설정 - 패키지의 경로 설정 후 그 안에 있는 클래스 이름이 별칭이 됨
# mybatis.type-aliases-package=kh.springboot.member.model.vo, kh.springboot.board.model.vo
# kh.springboot.모든 폴더.model.vo에 있는 것들을 resultType의 별칭으로 설정
mybatis.type-aliases-package=kh.springboot.*.model.vo
# java의 null을 mybatis가 인지하도록 하는 설정
mybatis.configuration.jdbc-type-for-null=null

#mail 부분
#spring에서 email부분을 사용 할 것인지 설정
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=
spring.mail.password=

# 검색 관련
# get방식 특수문자 처리
server.tomcat.relaxed-path-chars=[, ], {, }, ^, |, <, >
server.tomcat.relaxed-query-chars=[, ], {, }, ^, |, <, >


#log
#logging.level.root=debug
logging.level.kh.springboot.member.controller=debug