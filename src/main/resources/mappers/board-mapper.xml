<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kh.springboot.board.model.mapper.BoardMapper">
	<select id="getListCount" resultType="_int">
		select count(*)
		from board
			 join member on(board_writer = id)
		where board_type = abs(#{i})
		<if test="i > 0 ">
			 and board_status = 'Y'
		</if>
		<if test="value != null">
			<choose>
				<when test="condition == 'title' or condition == 'content'">
					and board_${condition} like '%${value}%'
				</when>
				<when test="condition == 'writer'">
					and nickname = #{value}
				</when>
			</choose>
		</if>
	</select>
	
	<select id="selectBoardList" resultType="Board">
		select *
		from board
			 join member on (board_writer = id)
		where board_type = abs(#{i})
		<if test="i > 0 ">
			 and board_status = 'Y'
		</if>
		<if test="value != null">
			<choose>
				<when test="condition == 'title' or condition == 'content'">
					and board_${condition} like '%${value}%'
				</when>
				<when test="condition == 'writer'">
					and nickname = #{value}
				</when>
			</choose>
		</if>
		order by board_id desc
	</select>
	
	<insert id="writeBoard">
		<!-- selectKey 적용 전 쿼리 -->
		<!-- 
			insert into board values
			(seq_bid.nextval, #{boardTitle}, #{boardWriter}, #{boardContent}, default, sysdate, sysdate, default, #{boardType})
		 -->
		<!-- 
			selectKey : insert/update 시 사용할 값(시퀀스)을 조회해서 객체의 지정된 필드에 대입 
				order		: sql문이 실행되기 전/후에 selectKey가 수행되도록 지정
				keyProperty	: selectkey 조회 결과를 저장할 필드
		-->
		<selectKey order="BEFORE" keyProperty="boardId" resultType="_int">
			select seq_bid.nextval from dual
		</selectKey>
		insert into board values
		(#{boardId}, #{boardTitle}, #{boardWriter}, #{boardContent}, default, sysdate, sysdate, default, #{boardType})
	</insert>
	
	<select id="selectBoard" resultType="Board">
		select *
		from board
		where board_id = #{bId} and board_status = 'Y'
	</select>
	
	<update id="updateCount">
		update board
		set board_count = board_count+1
		where board_id = #{bId}
	</update>
	
	<update id="updateBoard">
		update board
		set board_title = #{boardTitle}, board_content = #{boardContent}, board_modify_date = sysdate, board_type=#{boardType}
		where board_id = #{boardId}
	</update>
	
	<update id="deleteBoard">
		update board
		set board_status = 'N'
		where board_id = #{boardId}
	</update>
	
	<select id="selectAttmBoardList" resultType="Attachment">
		select *
		from attachment
		where attm_status = 'Y' and 
		<if test="bId == null">attm_level = 0</if>
		<if test="bId != null">ref_board_id = #{bId}</if>
		order by attm_id
	</select>
	
	<insert id="insertAttm">
		insert all
		<foreach collection="list" item="item" separator=" ">
			into attachment
			values(new_aid, #{item.refBoardId}, #{item.originalName}, #{item.renameName}, #{item.attmPath}, #{item.attmLevel}, default)
		</foreach>
		select * from dual
	</insert>
	
	<delete id="deleteAttm">
		delete 
		from attachment
		where rename_name in 
		<foreach collection="list" item="item" open="(" close=")" separator=",">
			#{item}
		</foreach>
	</delete>
	
	<update id="updateAttmLevel">
		update attachment
		set attm_level = 0
		where attm_id = (select min(attm_id)
						 from attachment
						 where ref_board_id = #{boardId})
	</update>
	
	<select id="selectTop" resultType="Board">
		<![CDATA[
		select *
		from (select * 
			  from board
			  	   join member on (id = board_writer)
			  order by board_count desc)
		where rownum <= 5 and board_status = 'Y'
		]]>
	</select>
	
	<select id="selectReplyList" resultType="Reply">
		select *
		from reply
			 join member on (reply_writer = id)
		where reply_status = 'Y' and ref_board_id = #{bId}
		order by reply_id desc
	</select>
	
	<insert id="insertReply">
		insert into reply
		values(seq_rid.nextVal, #{replyContent}, #{refBoardId}, #{replyWriter}, sysdate, sysdate, default)
	</insert>
	
	<delete id="deleteReply">
		delete from reply
		where reply_id = #{rId}
	</delete>
	
	<update id="updateReply">
		update reply
		set reply_content = #{replyContent}
		where reply_id = #{replyId}
	</update>
	
<!-- 	<update id="statusNAttm">
		update attachment
		set attm_status = 'N'
		where ref_board_Id = #{bId}
	</update> -->

	<update id="updateBoardStatus">
		update board
		set board_status = #{boardStatus}
		where board_id = #{boardId}
	</update>

	
</mapper>